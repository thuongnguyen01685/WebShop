{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false); //   const [cart, setCart] = useState([]);\n  //   const [history, setHistory] = useState([]);\n\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get(\"/user/infor\", {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false); //setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]); //   const addCart = async (product) => {\n  //     if (!isLogged) return alert(\"Please login to continue buying\");\n  //     const check = cart.every((item) => {\n  //       return item._id !== product._id;\n  //     });\n  //     if (check) {\n  //       setCart([...cart, { ...product, quantity: 1 }]);\n  //       await axios.patch(\n  //         \"/user/addcart\",\n  //         { cart: [...cart, { ...product, quantity: 1 }] },\n  //         {\n  //           headers: { Authorization: token },\n  //         }\n  //       );\n  //     } else {\n  //       alert(\"This product has been added to cart.\");\n  //     }\n  //   };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin] //cart: [cart, setCart],\n    //addCart: addCart,\n    //history: [history, setHistory],\n\n  };\n}\n\n_s(UserAPI, \"/0VDIA3txUMwdUWA8vY9yR8e4Rg=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["C:/Users/Thuong Nguyen/Desktop/DoAn/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC,CAFsB,CAGtB;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,KAAJ,EAAW;AACT,YAAMK,OAAO,GAAG,YAAY;AAC1B,YAAI;AACF,gBAAMC,GAAG,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,aAAV,EAAyB;AACzCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAET;AAAjB;AADgC,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBP,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD,CANE,CAQF;AACD,SATD,CASE,OAAOQ,GAAP,EAAY;AACZC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACD;AACF,OAbD;;AAeAV,MAAAA,OAAO;AACR;AACF,GAnBQ,EAmBN,CAACL,KAAD,CAnBM,CAAT,CANsB,CA2BtB;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADL;AAELC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFJ,CAGL;AACA;AACA;;AALK,GAAP;AAOD;;GAxDQL,O;;KAAAA,O;AA0DT,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction UserAPI(token) {\r\n  const [isLogged, setIsLogged] = useState(false);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  //   const [cart, setCart] = useState([]);\r\n  //   const [history, setHistory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      const getUser = async () => {\r\n        try {\r\n          const res = await axios.get(\"/user/infor\", {\r\n            headers: { Authorization: token },\r\n          });\r\n\r\n          setIsLogged(true);\r\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\r\n\r\n          //setCart(res.data.cart);\r\n        } catch (err) {\r\n          alert(err.response.data.msg);\r\n        }\r\n      };\r\n\r\n      getUser();\r\n    }\r\n  }, [token]);\r\n\r\n  //   const addCart = async (product) => {\r\n  //     if (!isLogged) return alert(\"Please login to continue buying\");\r\n\r\n  //     const check = cart.every((item) => {\r\n  //       return item._id !== product._id;\r\n  //     });\r\n\r\n  //     if (check) {\r\n  //       setCart([...cart, { ...product, quantity: 1 }]);\r\n\r\n  //       await axios.patch(\r\n  //         \"/user/addcart\",\r\n  //         { cart: [...cart, { ...product, quantity: 1 }] },\r\n  //         {\r\n  //           headers: { Authorization: token },\r\n  //         }\r\n  //       );\r\n  //     } else {\r\n  //       alert(\"This product has been added to cart.\");\r\n  //     }\r\n  //   };\r\n\r\n  return {\r\n    isLogged: [isLogged, setIsLogged],\r\n    isAdmin: [isAdmin, setIsAdmin],\r\n    //cart: [cart, setCart],\r\n    //addCart: addCart,\r\n    //history: [history, setHistory],\r\n  };\r\n}\r\n\r\nexport default UserAPI;\r\n"]},"metadata":{},"sourceType":"module"}